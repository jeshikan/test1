package test1;

import java.time.LocalDate;
import java.util.Scanner;

public class SelectCalendar {
	public static void main(String[] args) {
		///年と月を入力し、曜日始まりを選択するとその年月のカレンダーを表示する	
		
		//知りたい年(year)の入力
		Scanner scanner1;
		int year;
		while(true) {
			System.out.print("年を入力してください>");
			scanner1 = new Scanner(System.in);
			if(scanner1.hasNextInt()){
				year = scanner1.nextInt();
				if(year > 0) {
					break;
				}
	       		}
			System.out.println("正の整数を入力してください");
		}
		
		//知りたい月(month)の入力
		Scanner scanner2;
		int month;
		while(true) {
			System.out.print("月を入力してください>");
			scanner2 = new Scanner(System.in);
			if(scanner2.hasNextInt()){
				month = scanner2.nextInt();
				if(month > 0 && month < 13) {
					break;
				}
	        	}
			System.out.println("1から12の整数を入力してください");
		}
		
		//カレンダーの曜日が月曜始まりか日曜始まりかの指定(select)の入力
		Scanner scanner3;
		int select;
		while(true) {
			System.out.print("曜日始まりを入力してください(0:日、1:月)>");
			scanner3 = new Scanner(System.in);
			if(scanner3.hasNextInt()){
				select = scanner3.nextInt();
				if(select == 0 || select == 1) {
					break;
				}
	       		}
			System.out.println("0か1を入力してください");
		}
		
		//入力された年(year)と月(month)の表示
		System.out.println(year + "年" + month + "月");
		
		//入力された曜日始まりの指定(select)に応じた曜日の表示
		if(select == 0) {
			System.out.println("日 月 火 水 木 金 土");
		}else {
			System.out.println("月 火 水 木 金 土 日");
		}
		
		//入力された月に応じたその月の日数(maxday)
		int maxday;
		if(month == 2) {							//2月の場合
			if(year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {	//さらにうるう年かどうかで場合分け
				maxday = 29;
			}else {
				maxday = 28;
			}
		}else if(month == 4 || month == 6 || month == 9 || month == 11) { 	//4,5,9,11月の場合
			maxday = 30;
		}else {									//それ以外の月の場合
			maxday = 31;
		}
		
		//入力された年と月の1日の曜日の判定(n)
		//例えば日曜は0,月曜は1,…,土曜は6となる
		LocalDate date = LocalDate.of(year, month, 1);
		int n = date.getDayOfWeek().getValue();	
		
		//カレンダー初週の一番左がその月の何日か(day)
		//例えば日曜から始まるカレンダーで、
		//月曜がその月の1日の場合、日曜は0日と考える
		int day;
		if(select == 0) {							//日曜始まりの場合
			day = 1 - n % 7;
		}else {
			day = 1 - (n - 1) % 7;						//月曜始まりの場合
		}
		
		//カレンダーの1～maxdayの表示
		a:for(int i = day; ; ) {						//カウンタ変数iの初期値はdayでbreakまで繰り返す
			for(int j = 0; j < 7; j++) {					//各曜日である7回分繰り返す
				if(i <= 0) {						//存在しない日の場合(7月0日など)
					System.out.print("   ");			//半角3文字分の空白を表示
				}else if(i < 10){					//1～9日の場合
					System.out.print(" " + i + " ");		//iを半角1文字分の空白で挟んで表示
				}else if(i < maxday + 1){				//10～maxday日の場合
					System.out.print(i + " ");			//iに半角１文字分の空白をつけて表示
				}else {							//maxdayを超えた場合
					break a;					//繰り返しをおわる
				}
				i++;	
			}
		System.out.println();							//7回分表示したら改行する
		}
	}
}
